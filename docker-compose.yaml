services:
  php:
    build:
      context: ./php # indica onde está o arquivo dockfile
      dockerfile: Dockerfile
    
    conatainer_name: erick-ifsp-php #apelido para o container
    restart: always
    volumes:
      - ./web:/var/www/hmtl/ #irá copiar o conteúdo para a pasta source do container
    networks:
      - lamp-network
    ports:
      - "80:80" #mapear portas para ficarem visiveis na máquina host
    links:
      #criar conexão com o container do banco de dados
      - mysql
      - postgres
  
  postgres:
    image: postgres:12
    container_name: erick-alves-php
    restart: always
    environment:
      POSTGRES_PASSWORD: postdba
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./postgres:/var/lib/postgresql/data
    networks:
      - lamp-network

  pgadmin:
    image: dpage/pdadmin4
    container_name: erick-ifsp-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres@servidor.com
      PGADMIN_DEFAULT_PASSWORD: postdba
    ports:
      - 8081:80
    depends_on:
      - postgres
    networks:
      - lamp-network

  mysql:
    image: mysql:5.7
    container_name: erick-ifsp-mysql
    restart: always
    volumes:
      - ./mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: teste
    networks:
      - lamp-network
    
  phpmyadmin:
    build:
      context: ./phpmyadmin
      dockerfile: Dockerfile

    container:_name: erick-ifsp-phpmyadmin
    restart: always
    volumes:
      - /sessions
    ports:
      - "8080:80"
    links:
      - mysql
    environment:
      PMA_ARBITRARY: 0
      PMA_HOST: mysql
    networks:
      - lamp-network

networks:
  lamp-network:
    driver: bridge

volumes:
  postgres:
  mysql:
  web:
    driver: local